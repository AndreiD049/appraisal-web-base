version: "3.8"
services: 
  # Mongo 1 node-replica set
  mongodb1:
    image: 'mongo'
    hostname: "mongodb1"
    container_name: "mongodb1"
    volumes: 
      - mongodata:/data/db
    ports: 
      - 27017:27017
    env_file: .env 
    extra_hosts: 
      - "mongodb:${MONGODB}"
    entrypoint: ["mongod", "--bind_ip_all", "--noscripting", "--replSet", "rs0"]
  redis:
    image: redis:alpine
    container_name: redis
    env_file: .env
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    ports:
      - 6379:6379
  connect:
    image: 'connect:dev'
    container_name: 'connect'
    build:
      context: './admintools-connect'
      dockerfile: '../configs/local/Dockerfile.connect.dev'
    ports:
      - 3004:3004
    volumes: 
      - ./admintools-connect:/usr/src/connect
  auth:
    image: 'auth:dev'
    container_name: 'auth'
    build:
      context: ./admintools-auth
      dockerfile: ../configs/local/Dockerfile.auth
    ports: 
      - 3003:3003
    volumes: 
      - ./admintools-auth:/usr/src/auth
  web_front:
    image: 'web_front:dev'
    container_name: 'web_front'
    environment: 
      - CI=true
      - HOST=web_front
    build:
      context: ./admintools-front
      dockerfile: ../configs/local/Dockerfile.dev_front
    ports: 
      - 3000:3000
    volumes: 
      - ./admintools-front:/app
  web_back:
    image: 'web_back:dev'
    container_name: 'web_back'
    build:
      context: ./appraisal-web-back
      dockerfile: ../configs/local/Dockerfile.dev_back
    volumes: 
      - ./appraisal-web-back:/usr/src/appraisal-back
    env_file: .env 
    extra_hosts: 
      - "mongodb:${MONGODB}"
    ports:
      - 3001:3001
  nginx_dev:
    image: 'nignx_dev'
    container_name: 'nginx_dev'
    build: 
      context: ./configs
      dockerfile: ./local/Dockerfile-nginx.dev
    ports:
    - 3002:3002
volumes: 
  mongodata:
